1.1

> docker container ls -a
CONTAINER ID        IMAGE                          COMMAND                  CREATED             STATUS                      PORTS                    NAMES
7f96cd4a9da4        nginx                          "/docker-entrypoint.…"   6 minutes ago       Exited (0) 4 minutes ago                             trusting_hermann
7fa19626f4b0        nginx                          "/docker-entrypoint.…"   6 minutes ago       Exited (0) 4 minutes ago                             gracious_elbakyan
749b3fa9ab8a        nginx                          "/docker-entrypoint.…"   6 minutes ago       Up 6 minutes                80/tcp                   strange_chandrasekhar

1.2

> docker ps -a
CONTAINER ID        IMAGE                          COMMAND                  CREATED             STATUS              PORTS                    NAMES
> docker images
REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE

1.3

> docker run -it devopsdockeruh/pull_exercise
You found the correct password. Secret message is:
"This is the secret message"

1.4

> docker run devopsdockeruh/exec_bash_exercise
> docker exec -it ff3f3cf48f23 bash
root@ff3f3cf48f23:/usr/app# tail -f ./logs.txt

Secret message is:
"Docker is easy"

1.5

*Terminal 1*
> docker run -it ubuntu sh -c 'echo "Input website:"; read website; echo "Searching.."; sleep 1; curl http://$website;'

*Terminal 2*
> docker ps
CONTAINER ID        IMAGE                          COMMAND                   CREATED              STATUS              PORTS                    NAMES
dc53f2cf0b96        ubuntu                         "sh -c 'echo \"Input …"   About a minute ago   Up About a minute                            flamboyant_goodall

> docker exec -it dc53f2cf0b96 bash
root@dc53f2cf0b96:/# apt update
root@dc53f2cf0b96:/# apt install curl

*Terminal 1*
Input website:
helsinki.fi
Searching..
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>301 Moved Permanently</title>
</head><body>
<h1>Moved Permanently</h1>
<p>The document has moved <a href="http://www.helsinki.fi/">here</a>.</p>
</body></html>

1.6

*Terminal*
> docker run devopsdockeruh/overwrite_cmd_exercise

-h,             --help                  to show this message
-a [age],       --adult [age]           to check if you're older than 18
-c [time],      --clock [time]          to start a clock
-t [size],      --triangle [size]       to draw a triangle, takes second argument as the size

Dockerfile
FROM devopsdockeruh/overwrite_cmd_exercise
CMD ["-c"]

*Terminal*

> docker build -t docker-clock .
> docker run docker-clock

1.7
*localScript.sh*
#!/usr/bin/env bash
echo "Input website:"; read website; echo "Searching.."; sleep 1; curl http://$website;

*Dockerfile*
FROM ubuntu:16.04

WORKDIR /mydir
RUN apt-get update && apt-get install -y curl
COPY localScript.sh .
RUN chmod +x localScript.sh
CMD ["/mydir/localScript.sh"]

*Terminal*
> docker build -t curler .
> docker run -it curler
Input website:
helsinki.fi
Searching..
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>301 Moved Permanently</title>
</head><body>
<h1>Moved Permanently</h1>
<p>The document has moved <a href="http://www.helsinki.fi/">here</a>.</p>
</body></html>

1.8

> docker run devopsdockeruh/first_volume_exercise
> docker run devopsdockeruh/first_volume_exercise ls
Dockerfile
README.md
index.js
logs.txt
> docker run devopsdockeruh/first_volume_exercise pwd
/usr/app
> touch logs.txt
> docker run -v "/$(pwd)/logs.txt:/usr/app/logs.txt" devopsdockeruh/first_volume_exercise

*inside logs.txt*
Secret message is:
"Volume bind mount is easy"

1.9

> docker run -p 3000:80 devopsdockeruh/ports_exercise
*In my browser*
http://localhost:3000/ --> TEXT SAYS: Ports configured correctly!!

1.10

FROM node:lts-alpine

RUN apk update && apk add git

WORKDIR /mydir

RUN git clone https://github.com/docker-hy/frontend-example-docker.git

WORKDIR /mydir/frontend-example-docker

RUN npm install

ENTRYPOINT [ "npm" ]

CMD [ "start" ]

1.11 
*Dockerfile*
FROM node:lts-alpine

RUN apk update && apk add git

WORKDIR /mydir

RUN git clone https://github.com/docker-hy/frontend-example-docker.git

WORKDIR /mydir/frontend-example-docker

RUN npm install

ENTRYPOINT [ "npm" ]

CMD [ "start" ]

*Terminal*
> docker run -v "/$(pwd)/logs.txt:/mydir/backend-example-docker/logs.txt" -p 8000:8000 exercise1-11

1.12

*Backend Dockerfile*
FROM node:lts-alpine

RUN apk update && apk add git

WORKDIR /mydir

RUN git clone https://github.com/docker-hy/backend-example-docker.git

WORKDIR /mydir/backend-example-docker

RUN npm install

ENV FRONT_URL=http://localhost:5000

ENTRYPOINT [ "npm" ]

CMD [ "start" ]

*Backend Terminal*
> docker run -v "/$(pwd)/logs.txt:/mydir/backend-example-docker/logs.txt" -p 8000:8000 exercise1-12-backend

*Frontend Dockerfile*
FROM node:lts-alpine

RUN apk update && apk add git

WORKDIR /mydir

RUN git clone https://github.com/docker-hy/frontend-example-docker.git

WORKDIR /mydir/frontend-example-docker

RUN npm install

ENV API_URL=http://localhost:8000

ENTRYPOINT [ "npm" ]

CMD [ "start" ]

*Frontend Terminal*
> docker run -p 5000:5000 exercise1-12-frontend
